name: 'Render Quarto project'
author: 'step-security'
description: 'This action will render an existing quarto project'
inputs:
  to:
    description: 'Format to render output. Use "all" to generate all outputs, when eg rendering a book in HTML and PDF'
    required: false
  path:
    description: 'Subdirectory containing the quarto project to be rendered'
    required: false
    default: "."
runs:
  using: 'composite'
  steps: 
    - name: Subscription check
      run: |
        # validate subscription status
        API_URL="https://agent.api.stepsecurity.io/v1/github/$GITHUB_REPOSITORY/actions/subscription"

        # Set a timeout for the curl command (3 seconds)
        RESPONSE=$(curl --max-time 3 -s -w "%{http_code}" "$API_URL" -o /dev/null) || true
        CURL_EXIT_CODE=${?}

        # Check if the response code is not 200
        if [ $CURL_EXIT_CODE -ne 0 ] || [ "$RESPONSE" != "200" ]; then
          if [ -z "$RESPONSE" ] || [ "$RESPONSE" == "000" ] || [ $CURL_EXIT_CODE -ne 0 ]; then
            echo "Timeout or API not reachable. Continuing to next step."
          else
            echo "Subscription is not valid. Reach out to support@stepsecurity.io"
            exit 1
          fi
        fi
      shell: bash
      
    # Chrome v128 started to create problem. Pin previous version in the meantime
    # - name: Install Chrome
    # uses: browser-actions/setup-chrome@v1
    #  with:
    #    chrome-version: 127
    # The Check Chromium step appears necessary to avoid a crash/hang when rendering PDFs
    #
    # chromium is installed in the ubuntu 21 runners in GHA, so no need to install it
    #- name: 'Check Chromium'
    #  if: ${{ runner.os == 'Linux' }}
    #  run: |
    #    echo $(which google-chrome)
    #    $(which google-chrome) --headless --no-sandbox --disable-gpu --renderer-process-limit=1 https://www.chromestatus.com
    #  shell: bash
    - name: 'Render'
      env:
        QUARTO_PRINT_STACK: true
      run: |
        if [ "${{ inputs.to }}" == "" ]; then
          quarto render ${{ inputs.path }}
        else
          quarto render ${{ inputs.path }} --to ${{ inputs.to }}
        fi
        if [ -f "_book" ]; then
          echo "QUARTO_OUTPUT=_book" >> $GITHUB_ENV
        elif [ -f "_site" ]; then
          echo "QUARTO_OUTPUT=_site" >> $GITHUB_ENV
        fi
      shell: bash
