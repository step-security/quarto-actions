name: test.yaml

permissions: read-all

on:
  push:
    branches: [main]
  pull_request:
  workflow_dispatch:
    inputs:
      version:
        description: |
          Quarto version, may be "release", "pre-release" or a version number.
        required: true
        default: 'release'
        type: string
      tinytex:
        description: 'If true, install TinyTex, required for PDF rendering'
        required: false
        default: 'false'

jobs:
  quarto-setup:
    runs-on: ${{ matrix.config.os }}
    name: ${{ matrix.config.os }} (${{ inputs.version || matrix.version }})

    strategy:
      fail-fast: false
      matrix:
        version: ${{ inputs.version && fromJSON(format('["{0}"]', inputs.version)) || fromJSON('["release", "pre-release"]') }}
        config:
          # Default config for standard platforms
          - os: macos-latest
          - os: macos-13
          - os: windows-latest
            tinytex: 'false'
          - os: ubuntu-latest
          # Special config for ARM
          - os: ubuntu-22.04-arm
            tinytex: 'false'

    steps:
      - name: Harden the runner (Audit all outbound calls)
        uses: step-security/harden-runner@ec9f2d5744a09debf3a187a3f4f675c53b671911 # v2.13.0
        with:
          egress-policy: audit

      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - uses: ./setup
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          version: ${{ matrix.version }}
          tinytex: ${{ inputs.tinytex || matrix.config.tinytex || 'true' }}

      - run: quarto --version

      - run: which quarto
        if: ${{ runner.os == 'Linux' || runner.os == 'macOS' }}

      - run: where.exe quarto
        if: ${{ runner.os == 'Windows' }}

